name: go-test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: todoapp
        # Set health checks to wait until postgres has started/ is ready to accept connections
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # expose port
        ports:
          - 5432:5432
    steps:
      - name: Set up Go 1.21.3
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.3
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Install migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv ./migrate /usr/bin/migrate
          which migrate
      - name: Install sqlc
        run: |
          curl -L https://github.com/sqlc-dev/sqlc/releases/download/v1.25.0/sqlc_1.25.0_linux_amd64.tar.gz | tar xvz
          sudo mv ./sqlc /usr/bin/sqlc
          which sqlc
      - name: Run migration
        run: make migrate-up
      - name: Run sqlc generate
        run: make sqlc
      - name: Run tests
        run: make test
