// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package repository

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type PaymentStatus string

const (
	PaymentStatusPending PaymentStatus = "pending"
	PaymentStatusSuccess PaymentStatus = "success"
	PaymentStatusFailed  PaymentStatus = "failed"
)

func (e *PaymentStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PaymentStatus(s)
	case string:
		*e = PaymentStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for PaymentStatus: %T", src)
	}
	return nil
}

type NullPaymentStatus struct {
	PaymentStatus PaymentStatus `json:"payment_status"`
	Valid         bool          `json:"valid"` // Valid is true if PaymentStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPaymentStatus) Scan(value interface{}) error {
	if value == nil {
		ns.PaymentStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PaymentStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPaymentStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PaymentStatus), nil
}

type Payment struct {
	ID            string            `json:"id"`
	UserID        sql.NullString    `json:"user_id"`
	Status        NullPaymentStatus `json:"status"`
	PremiumTypeID string            `json:"premium_type_id"`
	Amount        int64             `json:"amount"`
}

type PremiumType struct {
	ID       string `json:"id"`
	TypeName string `json:"type_name"`
}

type Quotum struct {
	ID            string         `json:"id"`
	PremiumTypeID sql.NullString `json:"premium_type_id"`
	QuotaAmount   int64          `json:"quota_amount"`
}

type Todo struct {
	ID          string         `json:"id"`
	UserID      sql.NullString `json:"user_id"`
	TodoName    sql.NullString `json:"todo_name"`
	Description sql.NullString `json:"description"`
	CreatedAt   sql.NullTime   `json:"created_at"`
	UpdatedAt   sql.NullTime   `json:"updated_at"`
}

type User struct {
	ID            string       `json:"id"`
	Name          string       `json:"name"`
	Email         string       `json:"email"`
	Password      string       `json:"password"`
	AccountStatus sql.NullBool `json:"account_status"`
	AcountType    sql.NullBool `json:"acount_type"`
	CreatedAt     sql.NullTime `json:"created_at"`
	UpdatedAt     sql.NullTime `json:"updated_at"`
}
